#!/bin/bash
ADD=$1
JAR=/apps/aio_build
RECEITA_PASTA=/apps/aio_build
HOST="https://raw.githubusercontent.com"
APPS=/apps
AUTOINTEGRAR=1
GARRAFA=0

echo $1 $2

### Fun√ß√µes
CHECKINTEGRATE(){
if [[ "$1" == "--nointegrate" || "$2" == "--nointegrate" || "$3" == "--nointegrate" || "$4" == "--nointegrate" || "$5" == "--nointegrate" ]]; then
  AUTOINTEGRAR="0"
fi
}

CKLOCALNAMES(){
if [ "$2"=="local" || "$2"=="nointegrate" || "$2"=="--local" || "$2"=="--nointegrate"]; then
	$2=""
fi
if [ "$3"=="local" || "$3"=="nointegrate" || "$3"=="--local" || "$3"=="--nointegrate"]; then
	$3=""
fi
if [ "$4"=="local" || "$4"=="nointegrate" || "$4"=="--local" || "$4"=="--nointegrate"]; then
	$4=""
fi
if [ "$5"=="local" || "$5"=="nointegrate" || "$5"=="--local" || "$5"=="--nointegrate"]; then
	$5=""
fi
ADD=`cat $RECEITA_PASTA/system.aio | grep -w "$2$3$4$5:" | awk '{print $2}'`
}

DOCOOK(){
 pkg2appimage $ADD.yml	#COZINHA
 PRODUTO=`ls $RECEITA_PASTA/out/`	#Pega o nome do app criado
 DEL
 echo $ADD: $PRODUTO >> $RECEITA_PASTA/aio.list	#Coloca o nome do app novo na lista
 cp -Rf $RECEITA_PASTA/out/*.AppImage $APPS	#Move o app para a pasta de apps
}

DELBINS(){
	rm -RF /usr/bin/$ADD	#Remove o bin√°rio principal
	while IFS= read -r line
	do
	  ITEM=`cat $line | awk '{print $1}'`
	  echo $ITEM
	  if [[ "$ITEM" == "$ADD" ]]; then	#Cria uma lista dos parametros anteriormente adicionados
		echo `cat $line | awk '{print $2}'` >> /tmp/idata.aio 	
	  fi
	done < "$RECEITA_PASTA/idata.aio"
	
	while IFS= read -r line
	do
	  IDATARM=`cat $line | awk {print $0}`
	  rm -Rf /usr/share/applications/$IDATARM	  #Remove os atalhos de integra√ß√£o
	done < "/tmp/idata.aio"
	
}

DEL(){
	EXISTAPP=`cat $RECEITA_PASTA/aio.list | grep -w "$ADD:" | awk '{print $2}'`	#Detecta o nome do app antigo
	sed -i '/'$ADD'/d' $RECEITA_PASTA/aio.list	#Remove da lista o nome do app existente
	rm -Rf $APPS/$EXISTAPP	#Remove a liga√ß√£o
	if [[ -L "/usr/bin/$ADD" ]]; then
	  pkexec DELBINS
	fi
	rm -Rf $APPS/$EXISTAPP	#Remove o app existente
}

DELOVEN(){
 rm -Rf $RECEITA_PASTA/$OVEN
 rm -Rf $RECEITA_PASTA/out
 rm -Rf /tmp/idata
 rm -Rf /tmp/idata.aio
}

EXEINTEGRAR(){
if [[AUTOINTEGRAR=="1"]]; then
    mv /tmp/idata/*.idata /tmp/idata/*.desktop    #Renomeia os .idata para .desktop
    pkexec cp -Rf /tmp/idata/* /usr/share/applications    #Move com sudo para a pasta de aplica√ß√µes do sistema
#   rm -RF /tmp/idata	#Exclui a pasta de tranferencia
    echo "App integrado com sucesso"
  fi
}

GETNOMES(){ 
SUGESTS=`cat $RECEITA_PASTA/$ADD.yml | grep -w "sugests:"`	#Cria a lista de provaveis nomes para o app atravez da receita
sed -i '/'$ADD'/d' $RECEITA_PASTA/system.aio
for n in $SUGESTS; do
 echo $n: $ADD >> $RECEITA_PASTA/system.aio
 sed -i '/sugests/d' $RECEITA_PASTA/system.aio
 shift
done
}

GETRECEITA(){
if [ "GARRAFA"=="0" ];then
 ADD=`cat /tmp/book | grep -w "$ADD:" | awk '{print $2}'`
 JARRA=`cat /tmp/book | grep -w "$ADD:" | awk '{print $3}'`
 wget $HOST/$JARRA/$ADD.yml -P $RECEITA_PASTA/
else
 echo "A receita ser√° lida a partir da jarra (reposit√≥rio) local [üñ¥]"
fi
}

GETNETBOOK(){
	if [[ -e "$JAR/jar.aio" ]]; then
	  echo ""
	else
	  JARCONTENT
	fi
	if [[ -e "/tmp/jarra" ]]; then
	  rm -Rf /tmp/book	#REMOVE O LIVRO ANTIGO
	fi
	while IFS= read -r line
	do
		wget $line/book -P /tmp/	#BAIXA O NOVO LIVRO
	done < $JAR/jar.aio
}

JARCONTENT(){
  echo "https://raw.githubusercontent.com/andryeltj/receitas/master" > $JAR/jar.aio
}

MONTINTEGRAR(){
if [[ `cat $RECEITA_PASTA/$ADD.yml | grep -w "integrate:" | awk '{print $1}'` == "yes" ]]; then
  echo "Esse √© integrado"
  mkdir /tmp/idata
  #Cria a pasta de transferencia
  if [ -e "$RECEITA_PASTA/$OVEN/$ADD.AppDir/*.idata" ]; then
  #Checa se existem arquivos .idata na bandeja
   mv -Rf $RECEITA_PASTA/$OVEN/$ADD.AppDir/*.idata /tmp/idata
   #Move os .idata
   echo `ls /tmp/idata`: $ADD >> $RECEITA_PASTA/idata.aio
   #Lista o conteudo na pasta de transferencia para a lista dos dados integrados
  else
   cp -Rf $RECEITA_PASTA/$OVEN/*.desktop /tmp/idata
  fi 
  EXEINTEGRAR
else
  echo "Esta receita n√£o gera integra√ß√£o"
fi
}

HELP(){
  echo "##################################
#Ooops... Algo aconteceu de errado
##################################
#
#As op√ß√µes corretas s√£o:
#
#add ou install - instala o app
#del ou remove - remove a instala√ß√£o de um app
#upd ou update - Atualiza up app espec√≠fico
# -i	√â o mesmo que 'add'
# -d	√â o mesmo que 'del'
# -u	√â o mesmo que 'upd'
#
#
#"
}

### AMBIENTES GR√ÄFICOS
APPIN=""
COMO(){
export GUI="
<window decorated=\"false\" icon-name=\"gtk-dialog-question\"><vbox><text label=\"Como?\"></text><text label=\"Digite novamente o nome do App para\"></text><text label=\"que eu possa encontr√°-lo\"></text>
<entry><variable>APPIN</variable></entry><hbox homogeneous=\"true\"><button space-fill=\"true\" label=\"OK\"><action>echo Busque por: $"APPIN"</action><action>$2=$"APPIN"</action></button><button space-fill=\"true\" label=\"X\"></button></hbox></vbox></window>"
gtkdialog -p GUI
}

WELCOME(){
export GUI="
<vbox><text label=\"AIO\"></text><text><label>Ol√°, Sou o gerenciador de aplicativos</label></text>
<entry></entry><text><label>Para instalar coloque acima add e o nome do programa</label></text>
<text><label>Para remover coloque acima del e o nome do programa</label></text><hbox homogeneous=\"true\"><button space-fill=\"true\" label=\"Executar\"></button><button space-fill=\"true\" label=\"Cancelar\"></button><button space-fill=\"true\" label=\"Op√ß√µes...\"></button></hbox>
</vbox>"
gtkdialog -p GUI
}


############# MENSAGENS DO SISTEMA
MSGA001(){
	echo " "
	}
MSGAE001(){
	notify-send -i "gtk-dialog-warning" "N√£o encontrado" "O App n√£o foi encontrado nas fontes"
	}
MSGD001(){
	echo " "
	}
MSGU001(){
	notify-send -i gtk-refresh "Atualizando o app: $1 $2 $3 $4"
	}
	MSGU002(){
	notify-send -i gtk-yes -u normal "Atualizar" "Instala√ß√£o de $1 $2 $3 $4 completa"
	}
MSGUE001(){
	notify-send -i gtk-dialog-question -u normal "Como?" "N√£o consegui encontrar o app para atualizar"
}

### Lancadores
if [ -e "$JAR" ]; then
 echo "           [üñ¥ ‚úî]"
else
 echo "O caminho n√£o existe. CRIANDO. [üì•]"
 pkexec mkdir $JAR
 sudo chmod -R 775 $JAR
 echo "Jarra criada [üñ¥ ‚úî]"
  JARCONTENT
fi 

#### COMANDOS E INTEGRA√á√îES
if [[ "$1" == "add" || "$1" == "install" || "$1" == "-i" ]]; then
 CHECKINTEGRATE
 OVEN=`cat $ADD.yml | grep "app:" | awk '{print $0}'`
 GETRECEITA
 GETNOMES
 DOCOOK
 MONTINTEGRAR
 DELOVEN
elif [[ "$1" == "del" || "$1" == "remove" || "$1" == "-d" ]]; then
 CKLOCALNAMES
 DEL
elif [[ "$1" == "list" || "$1" == "-l" ]]; then
 echo "lista a lista e exibe"
 GETNETBOOK
 echo "
 #######################################################
 #######################################################
 <Nome>	<Receita>	<Jarra(Reposit√≥rio)>	<Coment√°rio>"
 cat /tmp/book
 echo " #######################################################
 #######################################################"
elif [[ "$1" == "up" || "$1" == "update" || "$1" == "-u" ]]; then
 GETNETBOOK
elif [[ "$1" == "atu" || "$1" == "atualizar" || "$1" == "-a" ]]; then
 CKLOCALNAMES
 CHECKINTEGRATE
 echo "App para atualizar: $ADD"
 GETRECEITA
 GETNOMES
 if [ -e "RECEITA_PASTA/$ADD.yml" ]; then
   echo "Receita encontrada no disco"
   MSGU001
   DOCOOK
   MONTINTEGRAR
   DEL
   DELOVEN
   MSGU002
 else
   echo "Receita n√£o encontrada"
   echo "A receita buscada foi: $APP"
   MSGUE001
   COMO
 fi
elif [[ "$1" == "--help" || "$2" == "--help" || "$3" == "--help" || "$4" == "--help" || "$1" == "help" || "$2" == "help" || "$3" == "help" || "$4" == "help" ]]; then
 HELP
elif [[ "$2" == "local" || "$3" == "local" || "$4" == "local" || "$5" == "local" || "$2" == "--local" || "$3" == "--local" || "$4" == "--local" || "$5" == "--local" ]]; then
 echo "jarra local [üñ¥]"
 GARRAFA=1
else
	
 WELCOME
fi

