#!/bin/bash
ADD=$2
JAR=/etc/aio	#Pasta das definiÃ§Ãµes
RECEITA_PASTA=/home/apps/receitas	#Pasta das receitas
BASIS=$RECEITA_PASTA/basis	#Pasta das bases para receitas
RAIZ="https://raw.githubusercontent.com"
APPS=/home/apps	#Pasta dos apps
COMBURENT="pkg2appimage"
BINS=/usr/bin
ELINKS=$ELINKS
OVEN=""
JARRA=""
PRODUTO=""
CAMINHO=`pwd`
AUTOINTEGRAR=1
VERSIONR=202006301438
ISLOCAL=0
troca=""
echo $CAMINHO
echo $1 $2 $3 $4 $5
### FunÃ§Ãµes
CALLLOCAL(){
if [[ "$2" == "local" || "$3" == "local" || "$4" == "local" || "$5" == "local" || "$2" == "--local" || "$3" == "--local" || "$4" == "--local" || "$5" == "--local" ]]; then
  echo "local"
  ISLOCAL=1
fi
}

CHECKINTEGRATE(){
if [[ "$1" == "--nointegrate" || "$2" == "--nointegrate" || "$3" == "--nointegrate" || "$4" == "--nointegrate" || "$5" == "--nointegrate" ]]; then
  AUTOINTEGRAR=0
fi
}

CKLOCALNAMES(){
if [ "$2"=="local" || "$2"=="nointegrate" || "$2"=="--local" || "$2"=="--nointegrate"]; then
	$2=""
fi
if [ "$3"=="local" || "$3"=="nointegrate" || "$3"=="--local" || "$3"=="--nointegrate"]; then
	$3=""
fi
if [ "$4"=="local" || "$4"=="nointegrate" || "$4"=="--local" || "$4"=="--nointegrate"]; then
	$4=""
fi
if [ "$5"=="local" || "$5"=="nointegrate" || "$5"=="--local" || "$5"=="--nointegrate"]; then
	$5=""
fi
ADD=`cat $JAR/system.aio | grep -w "$2$3$4$5:" | awk '{print $2}'`
}

CHECKAIOVERSION(){
AIOR=`cat /tmp/book | grep -w "aio:" | awk '{print $2}'`
echo "AIO: $AIOR"
if [ "$VERSIONR" -lt "$AIOR" ]; then
    troca=troca
    echo "Existe uma nova atualizaÃ§Ã£o de base. Digite a sua senha para realizar"
    MSGU003
	GETAIO
fi
}

DOCOOK(){
if [ -e "$RECEITA_PASTA/$ADD.yml" ]; then
 cd $RECEITA_PASTA
 echo "##*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*##"
 pkg2appimage "$RECEITA_PASTA/$ADD.yml"	#COZINHA
 echo "##*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*##"
 echo "$RECEITA_PASTA/$ADD
 "
 if [ -e "$RECEITA_PASTA/$OVEN" ]; then 
    if [ "$whoami"=="root" ]; then chmod 777 $RECEITA_PASTA/$ADD;  ##ContenÃ§Ã£o para caso seja gerado com sudo
     chmod 777 $RECEITA_PASTA/$ADD/$ADD.AppDir
     chmod 777 $RECEITA_PASTA/out;
    fi
else echo "Aconteceu algum erro na geraÃ§Ã£o do arquivo"; fi
cd $CAMINHO
 if [ -e "$RECEITA_PASTA/out/" ]; then	#Testa pra ver se foi cozinhado
  PRODUTO=`ls $RECEITA_PASTA/out/`	#Pega o nome do app criado
  APPNMLIST=cat $JAR/aio.list | grep -w '$ADD: $PRODUTO'; echo $APPNMLIST
  if [ "$APPNMLIST"=="$ADD: $PRODUTO" ]; then
   sed -i '/'$ADD'/d' $JAR/aio.list; echo "$ADD: $PRODUTO" >> $JAR/aio.list;
  else echo "$ADD: $PRODUTO" >> $JAR/aio.list; fi	#Coloca o nome do app novo na lista 
 else
  echo "NÃ£o existe receita para cozinhar"
 fi
fi
}

MOVUPDATELINK(){
	echo "linkando produto"
	if [ -e '$APPS/$PRODUTO' ]; then ln -s $APPS/$PRODUTO $APPS/$ADD.AppImage; if [ "$whoami"=="root" ]; then chmod 777 $APPS/$ADD.AppImage; fi else echo "Produto nÃ£o movido da pasta OUT"; fi
}
MOVXEKLINK(){
	echo "atualizando link"
	if [ -e '$APPS/$ADD.AppImage' ]; then rm $APPS/$ADD.AppImage; MOVUPDATELINK; else MOVUPDATELINK; fi
}
MOVLINKTOBIN(){
	echo "ingressÃ£o do link ao sistema"
	if [ -L "$BINS/$ADD" ]; then
	sudo ln -s $APPS/$ADD.AppImage $BINS/$ADD; sudo chmod 777 $BINS/$ADD; fi
}

MOVEAPP(){
if [ "$AUTOINTEGRAR"=="0" ]; then
   echo "Produto: $PRODUTO"
   if [ -e "$RECEITA_PASTA/out/$PRODUTO" ]; then cp -Rf $RECEITA_PASTA/out/$PRODUTO $APPS;	#Move o app para a pasta de apps
    sudo chmod 777 $APPS/$PRODUTO; else echo "produto nÃ£o existe, ou nÃ£o encontrado"; fi
   MOVXEKLINK
   MOVLINKTOBIN
   ######### CHECAR PRA VER ISSO AQUI ABAIXO
else 
   if [ -e "$BINS/$ADD" ]; then
    if [ -e '$APPS/$PRODUTO' ]; then
    MOVXEKLINK 
    echo "Os binÃ¡rios estÃ£o sendo atualizados"
    sudo mv $BINS/$ADD $BINS/$ADD.old
    MOVLINKTOBIN
    echo "$ADD: $ADD" >> $JAR/system.aio
    sudo chmod 777 $JAR/system.aio
    echo "BinÃ¡rios atualizados"; fi
   else
    echo "Tornando disponÃ­vel para o sistema. Digite sua senha ðŸ¡£"
    MOVXEKLINK
    MOVLINKTOBIN
    echo "ligaÃ§Ã£o atualizada"
   fi
  fi
else
  if [ -e '$RECEITA_PASTA/out/$PRODUTO' ]; then cp -Rf $RECEITA_PASTA/out/$PRODUTO $APPS; fi
fi
}

DELBINS(){
	rm -RF $BINS/$ADD	#Remove o binÃ¡rio principal
	while IFS= read -r line
	do
	  ITEM=`cat $line | awk '{print $1}'`
	  echo $ITEM
	  if [[ "$ITEM" == "$ADD" ]]; then	#Cria uma lista dos parametros anteriormente adicionados
		echo `cat $line | awk '{print $2}'` >> /tmp/idata.aio 	
	  fi
	done < "$JAR/idata.aio"
	
	while IFS= read -r line
	do
	  IDATARM=`cat $line | awk {print $0}`
	  rm -Rf $ELINKS/$IDATARM	  #Remove os atalhos de integraÃ§Ã£o
	done < "/tmp/idata.aio"
	
}

DEL(){
	EXISTAPP=`cat $JAR/aio.list | grep -w "$ADD:" | awk '{print $2}'`	#Detecta o nome do app antigo
	sed -i '/'$ADD'/d' $JAR/aio.list	#Remove da lista o nome do app existente
	rm -Rf $APPS/$EXISTAPP	#Remove a ligaÃ§Ã£o
	if [[ -L "$BINS/$ADD" ]]; then
	  sudo bash -c "$DELBINS"
	fi
	rm -Rf $APPS/$EXISTAPP	#Remove o app existente
}

DELOVEN(){
 echo "FORNO: $OVEN"
 echo "'$RECEITA_PASTA/$OVEN'"
 if [ -e "$RECEITA_PASTA/$OVEN" ]; then rm -Rf $RECEITA_PASTA/$OVEN; echo "removendo forno"; else  echo "o forno nÃ£o existe"; fi
 if [ -e "$RECEITA_PASTA/out/" ]; then rm -Rf $RECEITA_PASTA/out; echo "removendo bandeja"; else  echo "a bandeja nÃ£o existe"; fi
 if [ -e "/tmp/idata" ]; then rm -Rf /tmp/idata; fi
 if [ -e "/tmp/idata.aio" ]; then rm -Rf /tmp/idata.aio; fi
}

EXEINTEGRAR(){
if [[ "$AUTOINTEGRAR"=="1" ]]; then
    mv /tmp/idata/*.idata /tmp/idata/*.desktop    #Renomeia os .idata para .desktop
    sudo bash -c "cp -Rf /tmp/idata/*.desktop $ELINKS"    #Move com sudo para a pasta de aplicaÃ§Ãµes do sistema
    sudo bash -c "cp -Rf /tmp/idata/*.svg /usr/share/icons/hicolor/256x256/apps/"	#Copia os icones baixados para a pasta do sistema
    sudo bash -c "cp -Rf /tmp/idata/*.png /usr/share/icons/hicolor/256x256/apps/"
#   rm -RF /tmp/idata	#Exclui a pasta de tranferencia
    echo "App integrado com sucesso"
  fi
}

EXENOINTEGRADO(){
	sudo cp -Rf $OVEN/$OVEN.AppDir/*.desktop $ELINKS/
	LOCALAPPICON="$RECEITA_PASTA/$OVEN/$OVEN.AppDir"
	echo $LOCALAPPICON
	if [ -e "$LOCALAPPICON/*.svg" ]; then sudo cp -Rf $LOCALAPPICON/*.svg /usr/share/icons/hicolor/256x256/apps/
	else sudo cp -Rf $LOCALAPPICON/*.png /usr/share/icons/hicolor/256x256/apps/; fi
	echo "App adicionado ao sistema"
}

GETAIO(){
	rm -Rf $JAR/aio
	wget -q --show-progress $RAIZ/andryeltj/aio/master/aio -P $JAR
	chmod +x $JAR/aio
	AIOR=`cat $JAR/aio | grep -w "VERSIONR=" | awk '{print $2}'`
	echo "ðŸ—˜ AIO: $AIOR"
}

GETRECEITA(){
 ADD=`cat /tmp/book | grep -w "$ADD:" | awk '{print $2}'`
 JARRA=`cat /tmp/book | grep -w "$ADD" | awk '{print $3}'`
 if [ -e "$RECEITA_PASTA/$ADD.yml" ]; then rm -Rf $RECEITA_PASTA/$ADD.yml; fi
 echo "$RAIZ/$JARRA/$ADD.yml"
 wget -q --show-progress $RAIZ/$JARRA/$ADD.yml -P $RECEITA_PASTA/
 if [ "$whoami"=="root" ]; then chmod 777 $RECEITA_PASTA/$ADD.yml; fi
 if [ -e "$RECEITA_PASTA/$ADD.yml" ]; then OVEN=`cat $RECEITA_PASTA/$ADD.yml | grep "app:" | awk '{print $2}'`; echo "OVEN:$OVEN" else echo "Receita nÃ£o baixada"; fi
}

GETCOMBURENT(){
 if [ -e "$JAR/$COMBURENT" ]; then troca=troca;
 else 
  GETNETBOOK
  JARRA=`cat /tmp/book | grep -w "$COMBURENT" | awk '{print $3}'`
  wget -q --show-progress $RAIZ/$JARRA/$COMBURENT -P /etc/aio/; chmod +x $JAR/$COMBURENT;
  if [ -e "$BINS/$COMBURENT" ]; then troca=troca; else sudo ln -s $JAR/$COMBURENT $BINS/$COMBURENT; fi
# sed -i 's|wget|wget -q --show-progress|g' $JAR/$COMBURENT
# sed -i 's|wget -q --show-progress -q|wget -q --show-progress|g' $JAR/$COMBURENT
# sed -i 's|wget -q --show-progress -q --show-progress|wget -q --show-progress|g' $JAR/$COMBURENT
  if [ -e "$JAR/$COMBURENT" ]; then troca=troca; echo "Comburente adiquirido"; else echo "Falha ao adiquirir comburente"; fi 
  if [ -e "$BINS/$COMBURENT" ]; then troca=troca; echo "Comburente integrado ao sistema"; else echo "Falha ao integrar comburente"; fi 
 fi
}

GETNETBOOK(){
	if [[ -e "$JAR/jar.aio" ]]; then
	  troca=troca
	else
	  JARCONTENT
	fi
	if [[ -e "/tmp/book" ]]; then
	  rm -Rf /tmp/book	#REMOVE O LIVRO ANTIGO
	fi
	while IFS= read -r line
	do
		rm -Rf /tmp/book
		wget -q --show-progress -q $line/book -P /tmp/	#BAIXA O NOVO LIVRO
		if [ "$whoami"=="root" ]; then chmod 777 /tmp/book; fi
	done < $JAR/jar.aio
}

GETSUGESTS(){ 
if [[ -e "$RECEITA_PASTA/$ADD.yml" ]]; then
 SUGESTS=`cat $RECEITA_PASTA/$ADD.yml | grep -w "sugests:"`	#Cria a lista de provaveis nomes para o app atravez da receita
 sed -i '/'$ADD'/d' $JAR/system.aio
 for n in $SUGESTS; do
  echo $n: $ADD >> $JAR/system.aio
  sed -i '/sugests/d' $JAR/system.aio
  shift
 done
else
 echo "A receita nÃ£o existe para ver se existem sugestÃµes de palavras"
fi
}

JARCONTENT(){
  echo "https://raw.githubusercontent.com/andryeltj/receitas/master" > $JAR/jar.aio
}

LISTJAR(){
 echo "
 #######################################################
 #######################################################
 	<Nome>		<Jarra(RepositÃ³rio)>"
 rm -Rf /tmp/book2
while IFS= read -r line
do
   echo $line | awk '{print "  "$1"		"$3}' >> /tmp/book2
done < /tmp/book
 if [ "$whoami"=="root" ]; then chmod 777 /tmp/book2; fi
 sed -i '/aio:/d' /tmp/book2
 cat /tmp/book2
 echo " #######################################################
 #######################################################"
}

TSTINTEGRAR(){
if [ -e "$RECEITA_PASTA/$ADD.yml" ]; then
echo "OVEN para o teste $OVEN"
 if [[ `cat $RECEITA_PASTA/$ADD.yml | grep -w "integrate:" | awk '{print $2}'` == "yes" ]]; then
  echo "Receita com integraÃ§Ã£o"
  if [ -e "$RECEITA_PASTA/out" ]; then
   mkdir /tmp/idata	#Cria a pasta de transferencia
   
   if [ -e "$RECEITA_PASTA/$OVEN/$OVEN.AppDir/*.idata" ]; then	#Checa se existem arquivos .idata na bandeja
    cp -Rf $RECEITA_PASTA/$OVEN/$OVEN.AppDir/*.idata /tmp/idata	#Copia os .idata
    rm -Rf /tmp/idatalist.aio; ls /tmp/idata >> /tmp/idatalist.aio
    while IFS= read -r line; do
     echo $line | awk '{print $1": "$ADD}' >>  $JAR/idata.aio	#Lista o conteudo na pasta de transferencia para a lista dos dados integrados
    done < /tmp/idatalist.aio
   else cp -Rf $RECEITA_PASTA/$OVEN/$OVEN.AppDir/*.desktop /tmp/idata
   fi
   ####################
   if [ -e "$RECEITA_PASTA/$OVEN/$OVEN.AppDir/icons.aio" ]; then
    mkdir /tmp/idata/icons;    mv -Rf $RECEITA_PASTA/$OVEN/$OVEN.AppDir/icons.aio /tmp/idata
    while IFS= read -r line; do wget -q --show-progress $line -P /tmp/idata/icons/	#BAIXA OS ICONES LISTADOS
    done < /tmp/idata/icons.aio
    rm -Rf /tmp/iconslist.aio; ls /tmp/idata/icons/ >> /tmp/iconslist.aio
    while IFS= read -r line; do echo $line | awk '{print $1": "$ADD}' >>  $JAR/idata.aio 	#Lista os icones a ser inseridos no sistema
    done < /tmp/iconslist.aio
   fi
   
   EXEINTEGRAR
  else
   echo "Ocorreu algum erro ao cozinhar"
  fi
 else
  echo "Esta receita nÃ£o gera integraÃ§Ã£o"
  EXENOINTEGRADO
 fi
else
 echo "TSTINTEGRAR: Esta receita nÃ£o existe"
fi
}

NATIVEFIER(){
	#A funÃ§Ã£o deve ser iniciada antes de DOCOOK para baixar no disco a base que vai para a receita.	
	NATIVEFIERCK=`cat $RECEITA_PASTA/$ADD.yml | grep -w "nativefier:" | awk '{print $2}'`
	if [ "$NATIVEFIERCK" == "yes" ]; then
	  if [[ -e "$BASIS/NativefierBasis.tar.xz" ]]; then
	   troca=troca;	  else
	   BASISLINK=`cat $RECEITA_PASTA/$ADD.yml | grep -w "nativefierlink:" | awk '{print $2}'`
	   wget -q --show-progress --no-check-certificate '$BASISLINK' -O $BASIS/NativefierBasis.tar.xz
	  fi
	fi
}

TESTLOCAL(){
echo "##################### $ISLOCAL ###################"
if [ "$ISLOCAL" == "1" ]; then
  echo "##################### $ISLOCAL ###################"
  echo "ðŸ“œ Offline"
  MSGU004
  OVEN=`cat $RECEITA_PASTA/$ADD.yml | grep "app:" | awk '{print $2}'`
else
  echo "ðŸ“œ ONLINE"
  GETNETBOOK
  GETRECEITA
  GETSUGESTS
fi
}

HELP(){
  echo "##################################
#Ooops... Algo aconteceu de errado
##################################
#
#As opÃ§Ãµes corretas sÃ£o:
#
#add ou install - instala o app
#del ou remove - remove a instalaÃ§Ã£o de um app
#upd ou update - Atualiza up app especÃ­fico
# -i	Ã‰ o mesmo que 'add'
# -d	Ã‰ o mesmo que 'del'
# -u	Ã‰ o mesmo que 'upd'
#
#
#"
}

############# MENSAGENS DO SISTEMA
MSGA001(){
	echo " "
	}
MSGAE001(){
	notify-send -i "gtk-dialog-warning" "NÃ£o encontrado" "O App nÃ£o foi encontrado nas fontes"
	}
MSGD001(){
	echo " "
	}
MSGU001(){
	notify-send -i gtk-refresh "Atualizando o app: $1 $2 $3 $4"
	}
MSGU002(){
	notify-send -i gtk-yes -u normal "Atualizar" "InstalaÃ§Ã£o de $1 $2 $3 $4 completa"
	}
MSGU003(){
	notify-send -i gtk-refresh "Existe uma nova atualizaÃ§Ã£o de base. Digite a sua senha para realizar"
	}
MSGU004(){
	notify-send -i gtk-yes "A instalaÃ§Ã£o estÃ¡ sendo realizada com uma receita local"
	}
MSGUE001(){
	notify-send -i gtk-dialog-question -u normal "Como?" "NÃ£o consegui encontrar o app para atualizar"
}

### Lancadores
if [ -e "$APPS" ]; then troca=troca; else sudo mkdir $APPS; sudo chmod -R 777 $APPS; if [ -e "$APPS" ]; then  echo " [ðŸ“¥âœ”] Pasta de Apps criada"; fi fi
if [[ -e "$RECEITA_PASTA" ]]; then troca=troca; else mkdir $RECEITA_PASTA; sudo chmod -R 777 $RECEITA_PASTA; if [ -e "$RECEITA_PASTA" ]; then echo " [ðŸ“œâœ”] Pasta das receitas criada"; fi	fi #Cria a pasta aonde vÃ£o ficar as bases
if [[ -e "$BASIS" ]]; then troca=troca; else mkdir $BASIS; sudo chmod -R 777 $BASIS; if [ -e "$BASIS" ]; then echo " [ðŸ“œâœ”] Pasta das bases criada"; fi fi 	#Cria a pasta aonde vÃ£o ficar as bases
if [ -e "$JAR" ]; then troca=troca; else sudo mkdir $JAR; sudo chmod -R 777 $JAR;	#Cria a pasta aonde vÃ£o ficar as definiÃ§Ãµes
 if [ -e "$JAR" ]; then mv $CAMINHO/aio $JAR; rm -Rf $BINS/aio; ln -s $JAR/aio $BINS/aio; echo " [ðŸ–´ âœ”] Jarra criada"; fi
 if [ -e "$BINS/aio" ]; then ln -s $JAR/aio $BINS/aio; fi 
fi
if [ -e "$ELINKS/aio.desktop" ]; then troca=troca; else 
echo "[Desktop Entry]
Type=Application
Name=AIO
Exec=aio %u
Icon=utilities-terminal
Terminal=true
MimeType=x-scheme-handler/aio;
Categories=System;
NoDisplay=true" >> $JAR/aio.desktop
sudo cp -f $JAR/aio.desktop $ELINKS
fi
if [ -e "$JAR/jar.aio" ]; then troca=troca; else JARCONTENT; fi
if [ -e "$JAR/aio" ]; then troca=troca; if [ -e "$BINS/aio" ]; then troca=troca; else ln -s $JAR/aio $BINS/aio; fi else mv $CAMINHO/aio $JAR; ln -s $JAR/aio $BINS/aio; fi
GETCOMBURENT
if [ -e "$JAR/system.aio" ]; then troca=troca; else echo "" > $JAR/system.aio; sudo chmod 777 $JAR/system.aio; fi

#### COMANDOS E INTEGRAÃ‡Ã”ES
if [[ "$1" == "add" || "$1" == "install" || "$1" == "-i" ]]; then
 CHECKINTEGRATE
 TESTLOCAL
 NATIVEFIER
 DOCOOK
 MOVEAPP
 TSTINTEGRAR
 if [[ "$3" == "--mb" || "$4" == "--mb" ]]; then echo "A Bases serÃ£o mantidas"; else DELOVEN; fi
 
 
elif [[ "$1" == "del" || "$1" == "remove" || "$1" == "-d" ]]; then
 CKLOCALNAMES
 DEL
 
 
elif [[ "$1" == "list" || "$1" == "-l" ]]; then
 GETNETBOOK
 LISTJAR
 CHECKAIOVERSION
 
 
elif [[ "$1" == "up" || "$1" == "update" || "$1" == "-u" ]]; then
 GETNETBOOK
 CHECKAIOVERSION
 
 
elif [[ "$1" == "atu" || "$1" == "atualizar" || "$1" == "-a" ]]; then
 CKLOCALNAMES
 CALLLOCAL
 CHECKINTEGRATE
 echo "App para atualizar: $ADD"
 TESTLOCAL
 if [ -e "RECEITA_PASTA/$ADD.yml" ]; then
   echo "Receita encontrada no disco"
   MSGU001
   NATIVEFIER
   DOCOOK
   TSTINTEGRAR
   DEL
   if [[ "$3" == "--mb" || "$4" == "--mb" ]]; then echo "A Bases serÃ£o mantidas"; else DELOVEN; fi
   MSGU002
 else
   echo "Receita nÃ£o encontrada"
   echo "A receita buscada foi: $APP"
   MSGUE001
 fi
 
 
elif [[ "$1" == "--help" || "$2" == "--help" || "$3" == "--help" || "$4" == "--help" || "$1" == "help" || "$2" == "help" || "$3" == "help" || "$4" == "help" ]]; then
 HELP
else
troca=troca
fi
